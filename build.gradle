
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.3'
    id 'io.spring.dependency-management' version '1.1.0'
    //	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // ⭐ Querydsl 플러그인 사용 X
}

group = 'sample'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.modelmapper:modelmapper:3.1.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // ⭐ Spring boot 3.x이상에서 QueryDsl 패키지를 정의하는 방법
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
    useJUnitPlatform()
}

// === ⭐ QueryDsl 빌드 옵션 (선택) ===
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
    file(querydslDir).deleteDir()
}


//buildscript {
//    ext {
//        queryDslVersion = "5.0.0"
//    }
//}
//
//plugins {
//    id 'org.springframework.boot' version '2.6.0'
//    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
//    //querydsl 추가
////    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
//    id 'java'
//}
//
//group = 'com'
//version = '0.0.1-SNAPSHOT'
//sourceCompatibility = '17'
//targetCompatibility = '17'
//
//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//}
//
//repositories {
//    mavenCentral()
//}
//
//dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    compileOnly 'org.projectlombok:lombok'
//    developmentOnly 'org.springframework.boot:spring-boot-devtools'
//    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
//    annotationProcessor 'org.projectlombok:lombok'
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
//
//    implementation 'com.querydsl:querydsl-core'
//    implementation 'org.springframework.boot:spring-boot-starter-web'
//
//    implementation 'jakarta.persistence:jakarta.persistence-api:3.0.0'
//    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
//    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//
//    implementation 'org.modelmapper:modelmapper:3.1.0'
//    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'
//    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
//    implementation 'com.google.code.gson:gson:2.8.9'
//
//    compileOnly 'org.projectlombok:lombok'
//    annotationProcessor 'org.projectlombok:lombok'
//
//    //
//
//    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//    implementation "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
//    implementation "com.querydsl:querydsl-collections"
//    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
//    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
//    annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
//    annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드
//    //
//
//
//
//
//}
//
//
//tasks.named('test') {
//    useJUnitPlatform()
//}
//
//def querydslDir = "$buildDir/generated/querydsl"
//
//
//sourceSets {
//    main.java.srcDir querydslDir
//}
//
//tasks.withType(JavaCompile) {
//    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
//}
////compileQuerydsl {
////    options.annotationProcessorPath = configurations.querydsl
////}
//
//configurations {
//    querydsl.extendsFrom compileClasspath
//}
//
//
